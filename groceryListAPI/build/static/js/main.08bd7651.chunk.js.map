{"version":3,"sources":["groceryAisles.js","groceryList.js","aisle2.js","add.js","deleteAisle.js","deleteItem.js","wholeList.js","App.js","serviceWorker.js","index.js"],"names":["GroceryOptionList","state","aisles","items","this","props","onAisleSelected","aislesColors","console","log","id","to","className","map","aisle","key","onClick","style","color","textDecoration","name","Component","GroceryList","arrayUnique","arr","filter","item","index","indexOf","theList","theItems","aisle_num","uniqueItems","listItems","count","Aisle","selectedItems","fetch","match","params","then","response","ok","Error","json","setState","aisleId","aisleName","catch","err","error","message","deleteLink","onItemSelected","Add","itemName","handleNameInput","e","target","value","handleAisleInput","handleAddItemButton","a","preventDefault","method","headers","body","JSON","stringify","resp","statusText","data","onAddItem","handleAddAisleButton","onAddAisle","addItem","type","onChange","addAisle","display","Delete","selectedAisle","handleAisleSelect","handleDeleteAisleButton","onDeleteAisle","deleteAisle","itemId","handleItemSelect","handleDeleteItemButton","aisleNum","onDeleteItem","deleteItem","WholeList","listArray","forEach","uniqueLists","list","i","j","App","handleAisleSelected","newColors","handleItemSelected","handleAddAisle","handleAddItem","handleDeleteAisle","handleDeleteItem","initColors","exact","activeStyle","path","render","routeProps","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0cAMqBA,E,2MAEjBC,MAAQ,CACJC,OAAQ,KACRC,MAAO,I,wEASD,IAAD,EACuDC,KAAKC,MAAzDH,EADH,EACGA,OAAkBI,EADrB,EACqBA,gBAAiBC,EADtC,EACsCA,aAI3C,OAFAC,QAAQC,IAAI,eAAgBF,GAGxB,oCAGI,yBAAKG,GAAG,UACJ,sCACA,kBAAC,IAAD,CAASC,GAAG,cAAZ,aAFJ,MAEmD,kBAAC,IAAD,CAASA,GAAG,gBAAZ,gBAC/C,yBAAKC,UAAU,iBAAiBF,GAAG,gBACtBH,GACLL,EAAOW,KAAI,SAAAC,GAAK,OACZ,yBAAKF,UAAU,WAAWG,IAAKD,EAAMJ,GAAIA,GAAII,EAAMJ,GAAIM,QAAS,kBAAMV,EAAgBQ,KAAQ,kBAAC,IAAD,CAAMG,MAAO,CAAyBC,MAAOX,EAAaO,EAAMJ,IAAKS,eAAgB,QAAUP,UAAU,OAAOD,GAAE,iBAAYG,EAAMJ,KAAOI,EAAMM,iB,GA5BhOC,aCF1BC,G,6NAEjBC,YAAc,SAAAC,GACV,OAAOA,EAAIC,QAAO,SAAUC,EAAMC,GAC9B,OAAOH,EAAII,QAAQF,IAASC,M,wEAQ1B,IAAD,EAIoBvB,KAAKC,MAAtBF,EAJH,EAIGA,MAAOW,EAJV,EAIUA,MAGTe,EAAUf,EAAQ,4BAAKA,EAAMM,KAAX,SAA6B,oCAEjDU,EAAW3B,EAAMsB,QAAO,SAAAC,GAAI,OAAIA,EAAKK,YAAcjB,KAEnDkB,EAAc5B,KAAKmB,YAAYO,GAE7BG,EAAYD,EACdA,EAAYnB,KAAI,SAAAa,GACZ,OAAIA,EAAKQ,MAAQ,EACN,wBAAInB,IAAKW,EAAKhB,GAAIA,GAAIgB,EAAKhB,IAAKgB,EAAKQ,MAArC,IAA6CR,EAAKN,KAAlD,MAGA,wBAAIL,IAAKW,EAAKhB,GAAIA,GAAIgB,EAAKhB,IAAKgB,EAAKN,KAArC,QAGX,KAKR,OACI,yBAAKV,GAAG,QAEHmB,EACD,kBAAC,IAAD,CAASlB,GAAG,cAAZ,aAEA,4BACKsB,Q,GA9CoBZ,cCCpBc,E,2MAEjBlC,MAAQ,CACJmC,cAAe,I,mFAGE,IAAD,OAChBC,MAAM,gBAAD,OAAiBjC,KAAKC,MAAMiC,MAAMC,OAAOzB,QACzC0B,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,kBAEpB,OAAOF,EAASG,UAEnBJ,MAAK,SAAA1B,GACF,EAAK+B,SAAS,CACVC,QAAShC,EAAM,GAAGJ,GAClBqC,UAAWjC,EAAM,GAAGM,UAG3B4B,OAAM,SAAAC,GACHzC,QAAQ0C,MAAMD,GACd,EAAKJ,SAAS,CACVK,MAAOD,EAAIE,QAAUF,EAAIE,QAAU,wB,+BAKzC,IAGFrB,EAHC,OACG3B,EAAUC,KAAKC,MAAfF,MAGRK,QAAQC,IAAI,QAASL,KAAKH,MAAM6C,SAGhChB,EAAW1B,KAAKH,MAAM6C,SAAW3C,EAAQA,EAAMsB,QAAO,SAAAC,GAAI,OAAIA,EAAKK,YAAc,EAAK9B,MAAM6C,WAAW,KAGvG,IAAMM,EAAahD,KAAKH,MAAM6C,QAAU,kBAAC,IAAD,CAASnC,GAAE,sBAAiBP,KAAKH,MAAM6C,UAAvC,eAA0E,KAElH,OACI,oCAEI,yBAAKpC,GAAG,eACJ,qCACA,kBAAC,IAAD,CAASC,GAAG,KAAZ,kBAFJ,MAE+C,kBAAC,IAAD,CAASA,GAAE,oBAAeP,KAAKH,MAAM6C,UAArC,YAF/C,MAEqHM,EAGjH,yBAAKxC,UAAU,kBAEVkB,GACGA,EAASjB,KAAI,SAAAa,GAAI,OACb,yBAAKX,IAAKW,EAAKhB,GAAIA,GAAIgB,EAAKhB,GAAIE,UAAU,OAAOI,QAAS,kBACtD,EAAKX,MAAMgD,eAAe3B,KAAQA,EAAKN,WAI1DhB,KAAKH,MAAM6C,SAAW,kBAAC,EAAD,CAAahC,MAAOV,KAAKH,MAAM6C,QAAS3C,MAAOC,KAAKC,MAAM+B,qB,GAzD9Df,a,yBCDdiC,G,iNACjBrD,MAAQ,CACJsD,SAAU,IACVR,UAAW,K,EAIfS,gBAAkB,SAAAC,GACd,EAAKZ,SAAS,CACVU,SAAUE,EAAEC,OAAOC,QAEvBnD,QAAQC,IAAI,WAAY,EAAKR,MAAMsD,W,EAGvCK,iBAAmB,SAAAH,GACf,EAAKZ,SAAS,CACVE,UAAWU,EAAEC,OAAOC,S,EAI5BE,oB,uCAAsB,WAAMJ,GAAN,iBAAAK,EAAA,6DAClBtD,QAAQC,IAAI,EAAKR,MAAMsD,UAAW,EAAKlD,MAAMiC,MAAMC,OAAOzB,OAC1D2C,EAAEM,iBAFgB,kBAIK1B,MAAM,cAAe,CACpC2B,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEhD,KAAM,EAAKnB,MAAMsD,SAAUzC,OAAQ,EAAKT,MAAMiC,MAAMC,OAAOzB,UATxE,WAIRuD,EAJQ,QAYJ3B,GAZI,0CAaHlC,QAAQ0C,MAAMmB,EAAKC,aAbhB,yBAgBSD,EAAKzB,OAhBd,QAgBJ2B,EAhBI,OAiBV/D,QAAQC,IAAI8D,GACZ,EAAKlE,MAAMmE,UAAUD,GAlBX,0DAqBd/D,QAAQ0C,MAAR,MArBc,0D,wDA4BtBuB,qB,uCAAuB,WAAMhB,GAAN,iBAAAK,EAAA,6DACnBL,EAAEM,iBADiB,kBAGI1B,MAAM,eAAgB,CACrC2B,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEtD,MAAO,EAAKb,MAAM8C,cAR9B,WAGTsB,EAHS,QAWL3B,GAXK,yCAYJlC,QAAQ0C,MAAMmB,EAAKC,aAZf,wBAeQD,EAAKzB,OAfb,QAeL2B,EAfK,OAgBX/D,QAAQC,IAAI8D,GACZ,EAAKlE,MAAMqE,WAAWH,GAjBX,0DAoBf/D,QAAQ0C,MAAR,MApBe,0D,8HA0Bb,IAAD,OACL1C,QAAQC,IAAIL,KAAKC,MAAMH,QACvBM,QAAQC,IAAI,aAAcL,KAAKC,MAAMiC,MAAMC,OAAOzB,OAElD,IAAM6D,EAAU,yBAAKjE,GAAG,cAAR,aAExB,2BAAOkE,KAAK,OAAOjB,MAAOvD,KAAKH,MAAMsD,SAAUnC,KAAK,YAAYyD,SAAU,SAAApB,GAAC,OAAI,EAAKD,gBAAgBC,MACxF,6BAOA,4BAAQzC,QAAS,SAAAyC,GAAC,OAAI,EAAKI,oBAAoBJ,KAA/C,IAAoD,kBAAC,IAAD,CAAM9C,GAAE,iBAAYP,KAAKC,MAAMiC,MAAMC,OAAOzB,QAA5C,SAIlDgE,EAAW,yBAAKpE,GAAG,eAAR,cAEjB,2BAAOkE,KAAK,OAAOjB,MAAOvD,KAAKH,MAAM8C,UAAW3B,KAAK,YAAYyD,SAAUzE,KAAKwD,mBAC5E,6BAEA,4BAAQ5C,QAAS,SAAAyC,GAAC,OAAI,EAAKgB,qBAAqBhB,KAAI,kBAAC,IAAD,CAAM9C,GAAG,KAAT,SAIxDH,QAAQC,IAAIL,KAAKC,MAAMiC,MAAMC,OAAOqC,MAEpC,IAAMG,EAA2C,UAAjC3E,KAAKC,MAAMiC,MAAMC,OAAOqC,KAAmBE,EAAWH,EACtE,OACI,oCACKI,O,GA1GgB1D,cCAZ2D,G,iNACjB/E,MAAQ,CAEJgF,cAAe,M,EAInBC,kBAAoB,SAAAzB,GAChB,EAAKZ,SAAS,CACVoC,cAAexB,EAAEC,OAAOC,QAE5BnD,QAAQC,IAAI,gBAAiB,EAAKR,MAAMgF,gB,EAI5CE,wB,uCAA0B,WAAM1B,GAAN,eAAAK,EAAA,6DACtBL,EAAEM,iBADoB,kBAGC1B,MAAM,eAAgB,CACrC2B,OAAQ,SACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEtD,MAAO,EAAKb,MAAMgF,kBAR3B,WAGZZ,EAHY,QAWR3B,GAXQ,yCAYPlC,QAAQ0C,MAAMmB,EAAKC,aAZZ,OAgBd,EAAKjE,MAAM+E,cAAc,EAAKnF,MAAMgF,eAhBtB,0DAoBlBzE,QAAQ0C,MAAR,MApBkB,0D,8HA0BhB,IAAD,OACL1C,QAAQC,IAAIL,KAAKC,MAAMH,QAEvB,IAAMmF,EAAc,yBAAK3E,GAAG,kBACxB,4BAAQA,GAAG,aAAaU,KAAK,QAAQyD,SAAU,SAAApB,GAAC,OAAI,EAAKyB,kBAAkBzB,KACtErD,KAAKC,MAAMH,QAAUE,KAAKC,MAAMH,OAAOW,KAAI,SAAAC,GAAK,OAAI,4BAASC,IAAKD,EAAMJ,GAAIiD,MAAO7C,EAAMJ,IAAKI,EAAMM,UAEzG,6BAEA,4BAAQJ,QAAS,SAAAyC,GAAC,OAAI,EAAK0B,wBAAwB1B,KAAI,kBAAC,IAAD,CAAM9C,GAAG,KAAT,YAK3D,OACI,oCACK0E,O,GAzDmBhE,cCAf2D,G,iNACjB/E,MAAQ,CACJqF,OAAQ,M,EA4BZC,iBAAmB,SAAA9B,GACf,EAAKZ,SAAS,CACVyC,OAAQ7B,EAAEC,OAAOC,S,EAKzB6B,uB,uCAAyB,WAAM/B,GAAN,eAAAK,EAAA,6DACrBtD,QAAQC,IAAI,EAAKR,MAAMsD,SAAU,EAAKtD,MAAMwF,UAC5ChC,EAAEM,iBAFmB,kBAIE1B,MAAM,eAAD,OAAgB,EAAKpC,MAAMqF,QAAU,CACzDtB,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAPP,WAIXI,EAJW,QAWP3B,GAXO,0CAYNlC,QAAQ0C,MAAMmB,EAAKC,aAZb,QAgBb,EAAKjE,MAAMqF,aAAa,EAAKzF,MAAMqF,QAhBtB,0DAmBjB9E,QAAQ0C,MAAR,MAnBiB,0D,yIA9BJ,IAAD,OAChBb,MAAM,eAAD,OAAgBjC,KAAKC,MAAMiC,MAAMC,OAAOzB,QACxC0B,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,kBAEpB,OAAOF,EAASG,UAEnBJ,MAAK,SAAArC,GACF,EAAK0C,SAAS,CACV1C,MAAOA,OAId6C,OAAM,SAAAC,GACHzC,QAAQ0C,MAAMD,GACd,EAAKJ,SAAS,CACVK,MAAOD,EAAIE,QAAUF,EAAIE,QAAU,wB,+BAsCzC,IAAD,OAGCwC,GAFavF,KAAKC,MAAhBH,OAEW,yBAAKQ,GAAG,iBAAR,aAE3B,4BAAQA,GAAG,aAAaU,KAAK,QAAQyD,SAAU,SAAApB,GAAC,OAAI,EAAK8B,iBAAiB9B,KACzDrD,KAAKH,MAAME,OAASC,KAAKH,MAAME,MAAMU,KAAI,SAAAa,GAAI,OAAI,4BAASX,IAAKW,EAAKhB,GAAIiD,MAAOjC,EAAKhB,IAAKgB,EAAKN,UAEnG,6BAGA,4BAAQJ,QAAS,SAAAyC,GAAC,OAAI,EAAK+B,uBAAuB/B,KAAI,kBAAC,IAAD,CAAM9C,GAAE,iBAAYP,KAAKC,MAAMiC,MAAMC,OAAOzB,QAA5C,cAO1D,OACI,oCACK6E,O,GAlFmBtE,c,QCCfuE,G,iNAEjBrE,YAAc,SAAAC,GACV,OAAOA,EAAIC,QAAO,SAAUC,EAAMC,GAC9B,OAAOH,EAAII,QAAQF,IAASC,M,wEAI1B,IAAD,SAE6BvB,KAAKC,MAA/B+B,EAFH,EAEGA,cAAelC,EAFlB,EAEkBA,OAEnB2F,EAAY,GACZ3D,EAAQ,EACZhC,EAAO4F,SAAQ,SAAAhF,GACX+E,EAAU3D,KAAW,CAAEpB,MAAOA,EAAMM,KAAMjB,MAAOiC,EAAcX,QAAO,SAAAC,GAAI,OAAIA,EAAKK,YAAcjB,EAAMJ,UAE3GF,QAAQC,IAAI,YAAaoF,GAEzB,IAAME,EAAcF,EAAUhF,KAAI,SAAAmF,GAAU,MAAO,CAAElF,MAAOkF,EAAKlF,MAAOX,MAAO,EAAKoB,YAAYyE,EAAK7F,WACrGK,QAAQC,IAAIsF,GAEZ,IAAMlE,EAAUkE,EAAYlF,KAAI,SAACmF,EAAMC,GAAP,OAAc,yBAAKrF,UAAU,UAAUG,IAAKkF,GAAG,4BAAKD,EAAKlF,OAAW,4BAAKkF,EAAK7F,MAAMU,KAAI,SAACa,EAAMwE,GAAP,OAAa,wBAAInF,IAAKmF,GAAIxE,EAAKQ,MAAlB,IAA0BR,EAAKN,cAGpK,OAFAZ,QAAQC,IAAI,UAAWoB,GAGnB,oCACI,yBAAKnB,GAAG,gBACJ,kBAAC,IAAD,CAASC,GAAG,KAAZ,kBAEA,yBAAKC,UAAU,kBAEViB,S,GAhCcR,cCWlB8E,E,2MACnBlG,MAAQ,CACNE,MAAO,KACPD,OAAQ,GACRkC,cAAe,GACf7B,aAAc,I,EAmEhB6F,oBAAsB,SAAAtF,GACpB,IAAMuF,EAAS,YAAO,EAAKpG,MAAMM,cAEjC8F,EAAUvF,EAAMJ,IAAM,OACtBF,QAAQC,IAAI,IAAK4F,GACjB,EAAKxD,SAAS,CACZoC,cAAenE,EACfP,aAAc8F,K,EAKlBC,mBAAqB,SAAA5E,GAEnBlB,QAAQC,IAAI,aAAciB,EAAKQ,OAE3BR,EAAKQ,MACPR,EAAKQ,QAGLR,EAAKQ,MAAQ,EAIf,EAAKW,SAAS,CACZT,cAAc,GAAD,mBAAM,EAAKnC,MAAMmC,eAAjB,CAAgCV,MAE/ClB,QAAQC,IAAI,cAAe,EAAKR,MAAMmC,gB,EAKxCmE,eAAiB,SAAAzF,GACf,EAAK+B,SAAS,CACZ3C,OAAO,GAAD,mBAAM,EAAKD,MAAMC,QAAjB,CAAyBY,O,EAInC0F,cAAgB,SAAA9E,GACd,EAAKmB,SAAS,CACZ1C,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAwBuB,O,EAIjC+E,kBAAoB,SAAA/F,GAClBF,QAAQC,IAAI,KAAMC,GAClB,EAAKmC,SAAS,CACZ3C,OAAQ,EAAKD,MAAMC,OAAOuB,QAAO,SAAAX,GAAK,OAAIA,EAAMJ,IAAMA,Q,EAM1DgG,iBAAmB,SAAAhG,GACjB,EAAKmC,SAAS,CACZ1C,MAAO,EAAKF,MAAME,MAAMsB,QAAO,SAAAC,GAAI,OAAIA,EAAKhB,IAAMA,Q,mFArHjC,IAAD,OAClB2B,MAAM,gBACHG,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,kBAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAtC,GACJ,EAAK2C,SAAS,CACZ3C,OAAQA,OAIXsC,MAAK,SAAAtC,GACJ,EAAKD,MAAMC,OAAO4F,SAAQ,SAAAhF,GACxB,IAAM6F,EAAU,YAAO,EAAK1G,MAAMM,cAElCoG,EAAW7F,EAAMJ,IAAM,QACvBF,QAAQC,IAAI,IAAKkG,GACjB,EAAK9D,SAAS,CACZtC,aAAcoG,UAOnB3D,OAAM,SAAAC,GACLzC,QAAQ0C,MAAMD,GACd,EAAKJ,SAAS,CACZK,MAAOD,EAAIE,QAAUF,EAAIE,QAAU,sBAMzCd,MAAM,eACHG,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,kBAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAArC,GACJ,EAAK0C,SAAS,CACZ1C,MAAOA,OAIV6C,OAAM,SAAAC,GACLzC,QAAQ0C,MAAMD,GACd,EAAKJ,SAAS,CACZK,MAAOD,EAAIE,QAAUF,EAAIE,QAAU,wB,+BAqEjC,IAAD,SAE+D/C,KAAKH,MAAnEE,EAFD,EAECA,MAAOD,EAFR,EAEQA,OAAQkC,EAFhB,EAEgBA,cAAe6C,EAF/B,EAE+BA,cAAe1E,EAF9C,EAE8CA,aAMrD,OAJAC,QAAQC,IAAI,gBAAiBF,GAG7BC,QAAQC,IAAI,eAAgBF,GAE1B,oCACE,yBAAKK,UAAU,aACb,yBAAKF,GAAG,QACN,iDAEF,yBAAKA,GAAG,OACN,4BACE,4BACE,kBAAC,IAAD,CAASkG,OAAK,EAACjG,GAAG,IAChBM,MAAO,CACLC,MAAO,SAET2F,YAAa,CACX3F,MAAO,QALX,WAQF,4BACE,kBAAC,IAAD,CAAS0F,OAAK,EAACjG,GAAG,IAChBM,MAAO,CACLC,MAAO,SAET2F,YAAa,CACX3F,MAAO,QALX,WASF,4BACE,kBAAC,IAAD,CAASP,GAAG,aACVM,MAAO,CACLC,MAAO,SAET2F,YAAa,CACX3F,MAAO,QALX,eAQF,4BACE,kBAAC,IAAD,CAAS0F,OAAK,EAACjG,GAAG,IAChBM,MAAO,CACLC,MAAO,SAET2F,YAAa,CACX3F,MAAO,QALX,sBAWR,6BACA,yBAAKN,UAAU,kBAGb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkG,KAAK,IAAIF,OAAK,EAACG,OAAQ,SAACC,GAAD,OAAiB,kBAAC,EAAD,iBAAmBA,EAAnB,CAA+B9G,OAAQA,EAAQI,gBAAiB,EAAK8F,oBAAqB7F,aAAcA,QACvJ,kBAAC,IAAD,CAAOuG,KAAK,gBAAgBC,OAAQ,SAACC,GAAD,OAAiB,kBAAC,EAAD,iBAAWA,EAAX,CAAuBlG,MAAOmE,EAAe9E,MAAOA,EAAOiC,cAAeA,EAAeiB,eAAgB,EAAKiD,yBACnK,kBAAC,IAAD,CAAOQ,KAAK,qBAAqBC,OAAQ,SAACC,GAAD,OAAiB,kBAAC,EAAD,eAAK9G,OAAQA,GAAY8G,EAAzB,CAAqCtC,WAAY,EAAK6B,eAAgB/B,UAAW,EAAKgC,oBAChJ,kBAAC,IAAD,CAAOM,KAAK,eAAeC,OAAQ,SAACC,GAAD,OAAiB,kBAAC,EAAD,eAAa9G,OAAQA,EAAQkF,cAAe,EAAKqB,mBAAuBO,OAC5H,kBAAC,IAAD,CAAOF,KAAK,aAAaC,OAAQ,SAACC,GAAD,OAAiB,kBAAC,EAAD,iBAAeA,EAAf,CAA2B5E,cAAe,EAAKnC,MAAMmC,cAAelC,OAAQ,EAAKD,MAAMC,aACzI,kBAAC,IAAD,CAAO4G,KAAK,qBAAqBC,OAAQ,SAACC,GAAD,OAAiB,kBAAC,EAAD,eAAY9G,OAAQA,EAAQC,MAAOA,EAAOuF,aAAc,EAAKgB,kBAAsBM,c,GAtMxH3F,aCJb4F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9E,MACvB,2DCXN+E,IAASN,OAAO,kBAAC,IAAD,KACZ,kBAAC,EAAD,OACcO,SAASC,eAAe,SD0HpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlF,MAAK,SAAAmF,GACJA,EAAaC,gBAEd5E,OAAM,SAAAE,GACL1C,QAAQ0C,MAAMA,EAAMC,c","file":"static/js/main.08bd7651.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './groceryAisles.css';\r\n// import Aisle from './aisle';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\n\r\nexport default class GroceryOptionList extends Component {\r\n\r\n    state = {\r\n        aisles: null,\r\n        items: [],\r\n    };\r\n\r\n    // handleAisleSelected = aisle => {\r\n    //     this.setState({\r\n    //         selectedAisle: aisle\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        const { aisles,/* items*/ onAisleSelected, aislesColors } = this.props;\r\n\r\n        console.log('aislesColors', aislesColors);\r\n\r\n        return (\r\n            <>\r\n\r\n\r\n                <div id=\"aisles\">\r\n                    <h2>Aisles</h2>\r\n                    <NavLink to=\"/add/aisle\">Add Aisle</NavLink> | <NavLink to=\"/deleteAisle\">Delete Aisle</NavLink>\r\n                    <div className=\"flex-container\" id=\"aisleDisplay\" >\r\n                        {aisles, aislesColors &&\r\n                            aisles.map(aisle =>\r\n                                <div className=\"aisleDiv\" key={aisle.id} id={aisle.id} onClick={() => onAisleSelected(aisle)}><Link style={{/* cursor: 'pointer',*/ color: aislesColors[aisle.id], textDecoration: 'none' }} className=\"link\" to={`/items/${aisle.id}`}>{aisle.name}</Link></div>)}\r\n\r\n                    </div>\r\n                    {/* <Aisle aisle={this.state.selectedAisle} items={items} selectedItems={this.props.selectedItems} onItemSelected={this.props.onItemSelected} /> */}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './groceryList.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class GroceryList extends Component {\r\n\r\n    arrayUnique = arr => {\r\n        return arr.filter(function (item, index) {\r\n            return arr.indexOf(item) >= index;\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const { items, aisle } = this.props;\r\n\r\n\r\n        const theList = aisle ? <h2>{aisle.name} List</h2> : <h2>List</h2>;\r\n\r\n        let theItems = items.filter(item => item.aisle_num === aisle);\r\n\r\n        let uniqueItems = this.arrayUnique(theItems);\r\n\r\n        const listItems = uniqueItems ?\r\n            uniqueItems.map(item => {\r\n                if (item.count > 1) {\r\n                    return <li key={item.id} id={item.id}>{item.count} {item.name}  </li>\r\n                }\r\n                else {\r\n                    return <li key={item.id} id={item.id}>{item.name} </li>\r\n                }\r\n            }\r\n            ) : null;\r\n\r\n        //cant update state inside this.render,causes loop\r\n        // if (aisle) { this.props.onItemList(listItems, aisle.name) };\r\n\r\n        return (\r\n            <div id=\"list\">\r\n\r\n                {theList}\r\n                <NavLink to=\"/wholeList\">Full List</NavLink>\r\n\r\n                <ul>\r\n                    {listItems}\r\n                </ul>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './aisle.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport GroceryList from './groceryList';\r\n\r\nexport default class Aisle extends Component {\r\n\r\n    state = {\r\n        selectedItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`/food/aisles/${this.props.match.params.aisle}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to load');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(aisle => {\r\n                this.setState({\r\n                    aisleId: aisle[0].id,\r\n                    aisleName: aisle[0].name\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                this.setState({\r\n                    error: err.message ? err.message : 'Failed to load'\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.props;\r\n\r\n        let theItems;\r\n        console.log('aisle', this.state.aisleId)\r\n\r\n\r\n        theItems = this.state.aisleId && items ? items.filter(item => item.aisle_num === this.state.aisleId) : null;\r\n\r\n\r\n        const deleteLink = this.state.aisleId ? <NavLink to={`/deleteItem/${this.state.aisleId}`}>Delete Item</NavLink> : null;\r\n\r\n        return (\r\n            <>\r\n                {/* <NavLink to=\"/\">Aisles</NavLink> */}\r\n                <div id=\"itemDisplay\" >\r\n                    <h2>Items</h2>\r\n                    <NavLink to=\"/\">Back to Aisles</NavLink> | <NavLink to={`/add/item/${this.state.aisleId}`}>Add Item</NavLink> | {deleteLink}\r\n\r\n\r\n                    <div className=\"flex-container\" >\r\n\r\n                        {theItems &&\r\n                            theItems.map(item =>\r\n                                <div key={item.id} id={item.id} className=\"item\" onClick={() =>\r\n                                    this.props.onItemSelected(item)}>{item.name}</div>)}\r\n\r\n                    </div>\r\n                </div>\r\n                {this.state.aisleId && <GroceryList aisle={this.state.aisleId} items={this.props.selectedItems} />}\r\n            </>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './add.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Add extends Component {\r\n    state = {\r\n        itemName: \" \",\r\n        aisleName: \" \",\r\n\r\n    };\r\n\r\n    handleNameInput = e => {\r\n        this.setState({\r\n            itemName: e.target.value\r\n        });\r\n        console.log('itemName', this.state.itemName)\r\n    }\r\n\r\n    handleAisleInput = e => {\r\n        this.setState({\r\n            aisleName: e.target.value\r\n        });\r\n    }\r\n\r\n    handleAddItemButton = async e => {\r\n        console.log(this.state.itemName, +this.props.match.params.aisle)\r\n        e.preventDefault();\r\n        try {\r\n            const resp = await fetch('/food/items', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ name: this.state.itemName, aisle: +this.props.match.params.aisle })\r\n            });\r\n\r\n            if (!resp.ok) {\r\n                return console.error(resp.statusText);\r\n            }\r\n            else {\r\n                const data = await resp.json();\r\n                console.log(data);\r\n                this.props.onAddItem(data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleAddAisleButton = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const resp = await fetch('/food/aisles', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ aisle: this.state.aisleName })\r\n            });\r\n\r\n            if (!resp.ok) {\r\n                return console.error(resp.statusText);\r\n            }\r\n            else {\r\n                const data = await resp.json();\r\n                console.log(data);\r\n                this.props.onAddAisle(data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props.aisles)\r\n        console.log('matchAisle', this.props.match.params.aisle)\r\n\r\n        const addItem = <div id=\"addItemDiv\">\r\n            Item Name:\r\n<input type=\"text\" value={this.state.itemName} name=\"ItemInput\" onChange={e => this.handleNameInput(e)}></input>\r\n            <br></br>\r\n            {/* Aisle:\r\n<select id=\"aisleSelect\" name=\"aisles\" onChange={e => this.handleAisleSelect(e)}>\r\n                {this.props.aisles && this.props.aisles.map(aisle => < option key={aisle.id} value={aisle.id}>{aisle.name}</option>)}\r\n            </select>\r\n            <br></br> */}\r\n\r\n            <button onClick={e => this.handleAddItemButton(e)}> <Link to={`/items/${this.props.match.params.aisle}`}>add</Link></button>\r\n\r\n        </div>;\r\n\r\n        const addAisle = <div id=\"addAisleDiv\">\r\n            Aisle Name:\r\n        <input type=\"text\" value={this.state.aisleName} name=\"ItemInput\" onChange={this.handleAisleInput}></input>\r\n            <br></br>\r\n\r\n            <button onClick={e => this.handleAddAisleButton(e)}><Link to=\"/\">add</Link></button>\r\n\r\n        </div>;\r\n\r\n        console.log(this.props.match.params.type)\r\n\r\n        const display = this.props.match.params.type === 'aisle' ? addAisle : addItem;\r\n        return (\r\n            <>\r\n                {display}\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './deleteAisle.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Delete extends Component {\r\n    state = {\r\n\r\n        selectedAisle: null\r\n\r\n    };\r\n\r\n    handleAisleSelect = e => {\r\n        this.setState({\r\n            selectedAisle: e.target.value\r\n        });\r\n        console.log('selectedAisle', this.state.selectedAisle)\r\n    }\r\n\r\n\r\n    handleDeleteAisleButton = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const resp = await fetch(`/food/aisles`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ aisle: this.state.selectedAisle })\r\n            });\r\n\r\n            if (!resp.ok) {\r\n                return console.error(resp.statusText);\r\n            }\r\n            else {\r\n\r\n                this.props.onDeleteAisle(this.state.selectedAisle);\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props.aisles)\r\n\r\n        const deleteAisle = <div id=\"deleteAisleDiv\">\r\n            <select id=\"itemSelect\" name=\"items\" onChange={e => this.handleAisleSelect(e)}>\r\n                {this.props.aisles && this.props.aisles.map(aisle => < option key={aisle.id} value={aisle.id}>{aisle.name}</option>)}\r\n            </select>\r\n            <br></br>\r\n\r\n            <button onClick={e => this.handleDeleteAisleButton(e)}><Link to=\"/\">delete</Link></button>\r\n\r\n        </div>;\r\n\r\n\r\n        return (\r\n            <>\r\n                {deleteAisle}\r\n\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './deleteItem.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Delete extends Component {\r\n    state = {\r\n        itemId: null,\r\n\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(`/food/items/${this.props.match.params.aisle}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to load');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(items => {\r\n                this.setState({\r\n                    items: items,\r\n                });\r\n            })\r\n\r\n            .catch(err => {\r\n                console.error(err);\r\n                this.setState({\r\n                    error: err.message ? err.message : 'Failed to load'\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    handleItemSelect = e => {\r\n        this.setState({\r\n            itemId: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n    handleDeleteItemButton = async e => {\r\n        console.log(this.state.itemName, this.state.aisleNum)\r\n        e.preventDefault();\r\n        try {\r\n            const resp = await fetch(`/food/items/${this.state.itemId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            if (!resp.ok) {\r\n                return console.error(resp.statusText);\r\n            }\r\n            else {\r\n\r\n                this.props.onDeleteItem(this.state.itemId);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { aisles } = this.props;\r\n\r\n        const deleteItem = <div id=\"deleteItemDiv\">\r\n            Item Name:\r\n<select id=\"itemSelect\" name=\"items\" onChange={e => this.handleItemSelect(e)}>\r\n                {this.state.items && this.state.items.map(item => < option key={item.id} value={item.id}>{item.name}</option>)}\r\n            </select>\r\n            <br></br>\r\n\r\n\r\n            <button onClick={e => this.handleDeleteItemButton(e)}><Link to={`/items/${this.props.match.params.aisle}`}>delete </Link></button>\r\n\r\n\r\n        </div >;\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                {deleteItem}\r\n\r\n            </>\r\n        );\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './wholeList.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class WholeList extends Component {\r\n\r\n    arrayUnique = arr => {\r\n        return arr.filter(function (item, index) {\r\n            return arr.indexOf(item) >= index;\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { selectedItems, aisles } = this.props;\r\n\r\n        let listArray = [];\r\n        let count = 0;\r\n        aisles.forEach(aisle => {\r\n            listArray[count++] = { aisle: aisle.name, items: selectedItems.filter(item => item.aisle_num === aisle.id) };\r\n        });\r\n        console.log('listArray', listArray);\r\n\r\n        const uniqueLists = listArray.map(list => { return { aisle: list.aisle, items: this.arrayUnique(list.items) } });\r\n        console.log(uniqueLists);\r\n\r\n        const theList = uniqueLists.map((list, i) => (<div className=\"listDiv\" key={i}><h1>{list.aisle}</h1><ul>{list.items.map((item, j) => <li key={j}>{item.count} {item.name}</li>)}</ul></div>));\r\n        console.log('thelist', theList);\r\n\r\n        return (\r\n            <>\r\n                <div id=\"wholeListDiv\">\r\n                    <NavLink to=\"/\">Back to Aisles</NavLink>\r\n\r\n                    <div className=\"flex-container\">\r\n\r\n                        {theList}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport GroceryAisles from './groceryAisles.js';\r\nimport './App.css';\r\nimport Aisle from './aisle2';\r\n\r\n\r\nimport Add from './add';\r\nimport DeleteAisle from './deleteAisle';\r\nimport DeleteItem from './deleteItem';\r\nimport { NavLink, Route, Switch } from 'react-router-dom';\r\nimport WholeList from './wholeList.js';\r\n\r\n// import Test from './test';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    items: null,\r\n    aisles: [],\r\n    selectedItems: [],\r\n    aislesColors: [],\r\n\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('/food/aisles')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to load');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(aisles => {\r\n        this.setState({\r\n          aisles: aisles,\r\n        });\r\n      })\r\n\r\n      .then(aisles => {\r\n        this.state.aisles.forEach(aisle => {\r\n          const initColors = [...this.state.aislesColors];\r\n\r\n          initColors[aisle.id] = 'black';\r\n          console.log('a', initColors)\r\n          this.setState({\r\n            aislesColors: initColors\r\n          });\r\n\r\n        })\r\n      })\r\n\r\n\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({\r\n          error: err.message ? err.message : 'Failed to load'\r\n        });\r\n      });\r\n\r\n\r\n\r\n    fetch(`/food/items`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to load');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(items => {\r\n        this.setState({\r\n          items: items,\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({\r\n          error: err.message ? err.message : 'Failed to load'\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  handleAisleSelected = aisle => {\r\n    const newColors = [...this.state.aislesColors];\r\n\r\n    newColors[aisle.id] = 'blue';\r\n    console.log('a', newColors)\r\n    this.setState({\r\n      selectedAisle: aisle,\r\n      aislesColors: newColors\r\n    });\r\n\r\n  }\r\n\r\n  handleItemSelected = item => {\r\n\r\n    console.log('item.count', item.count);\r\n\r\n    if (item.count) {\r\n      item.count++\r\n    }\r\n    else {\r\n      item.count = 1;\r\n    }\r\n\r\n\r\n    this.setState({\r\n      selectedItems: [...this.state.selectedItems, item]\r\n    });\r\n    console.log('grocerylist', this.state.selectedItems);\r\n\r\n  };\r\n\r\n\r\n  handleAddAisle = aisle => {\r\n    this.setState({\r\n      aisles: [...this.state.aisles, aisle]\r\n    })\r\n  }\r\n\r\n  handleAddItem = item => {\r\n    this.setState({\r\n      items: [...this.state.items, item]\r\n    })\r\n  }\r\n\r\n  handleDeleteAisle = id => {\r\n    console.log('id', id)\r\n    this.setState({\r\n      aisles: this.state.aisles.filter(aisle => aisle.id != id)\r\n    })\r\n\r\n\r\n  }\r\n\r\n  handleDeleteItem = id => {\r\n    this.setState({\r\n      items: this.state.items.filter(item => item.id != id)\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { items, aisles, selectedItems, selectedAisle, aislesColors } = this.state;\r\n\r\n    console.log('aislesColors1', aislesColors)\r\n\r\n\r\n    console.log('aislesColors', aislesColors)\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div id=\"logo\">\r\n            <h1>Grocery List App</h1>\r\n          </div>\r\n          <div id=\"nav\">\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to=\"/\"\r\n                  style={{\r\n                    color: \"green\"\r\n                  }}\r\n                  activeStyle={{\r\n                    color: \"red\"\r\n                  }}>Aisles</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink exact to=\"/\"\r\n                  style={{\r\n                    color: \"green\"\r\n                  }}\r\n                  activeStyle={{\r\n                    color: \"red\"\r\n                  }}\r\n                > Aisle</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/wholeList\"\r\n                  style={{\r\n                    color: \"green\"\r\n                  }}\r\n                  activeStyle={{\r\n                    color: \"red\"\r\n                  }}>Whole List</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink exact to=\"/\"\r\n                  style={{\r\n                    color: \"green\"\r\n                  }}\r\n                  activeStyle={{\r\n                    color: \"red\"\r\n                  }}>Personal Lists</NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"flex-container\">\r\n\r\n\r\n          <Switch>\r\n            <Route path=\"/\" exact render={(routeProps) => (<GroceryAisles {...routeProps} aisles={aisles} onAisleSelected={this.handleAisleSelected} aislesColors={aislesColors} />)} />\r\n            <Route path=\"/items/:aisle\" render={(routeProps) => (<Aisle {...routeProps} aisle={selectedAisle} items={items} selectedItems={selectedItems} onItemSelected={this.handleItemSelected} />)} />\r\n            <Route path=\"/add/:type/:aisle?\" render={(routeProps) => (<Add aisles={aisles} {...routeProps} onAddAisle={this.handleAddAisle} onAddItem={this.handleAddItem} />)} />\r\n            <Route path=\"/deleteAisle\" render={(routeProps) => (<DeleteAisle aisles={aisles} onDeleteAisle={this.handleDeleteAisle} {...routeProps} />)} />\r\n            <Route path=\"/wholeList\" render={(routeProps) => (<WholeList {...routeProps} selectedItems={this.state.selectedItems} aisles={this.state.aisles} />)} />\r\n            <Route path=\"/deleteItem/:aisle\" render={(routeProps) => (<DeleteItem aisles={aisles} items={items} onDeleteItem={this.handleDeleteItem} {...routeProps} />)} />\r\n\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter>\n    <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}